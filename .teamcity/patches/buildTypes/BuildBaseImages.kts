package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.BuildType
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.dockerSupport
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.perfmon
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with id = 'BuildBaseImages'
in the root project, and delete the patch script.
*/
create(DslContext.projectId, BuildType({
    id("BuildBaseImages")
    name = "Build base images"
    description = "Build base docker images"

    buildNumberPattern = "%build.prefix%.%build.counter%"

    params {
        param("build.prefix", "1.0")
    }

    vcs {
        root(DslContext.settingsRoot)

        cleanCheckout = true
        branchFilter = """
            +:*
            +:wip/docker-for-ci
        """.trimIndent()
        excludeDefaultBranchChanges = true
    }

    steps {
        script {
            name = "Build docker images"
            scriptContent = """
                VERSION="%build.number%"
                BUILDER_IMAGE_NAME="registry.a8c.com/calypso/base"
                CI_IMAGE_NAME="registry.a8c.com/calypso/ci"
                BUILDER_IMAGE="${'$'}{BUILDER_IMAGE_NAME}:${'$'}{VERSION}"
                CI_IMAGE="${'$'}{CI_IMAGE_NAME}:${'$'}{VERSION}"
                
                docker build -f docker/Dockerfile --no-cache --target builder -t "${'$'}BUILDER_IMAGE" .
                docker build -f docker/Dockerfile --target ci -t "${'$'}CI_IMAGE" .
                
                docker tag "${'$'}BUILDER_IMAGE" "${'$'}{BUILDER_IMAGE_NAME}:latest"
                docker tag "${'$'}CI_IMAGE" "${'$'}{CI_IMAGE_NAME}:latest"
                
                docker push "${'$'}CI_IMAGE"
                docker push "${'$'}{CI_IMAGE_NAME}:latest"
                
                docker push "${'$'}BUILDER_IMAGE"
                docker push "${'$'}{BUILDER_IMAGE_NAME}:latest"
            """.trimIndent()
            dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
            dockerRunParameters = "-u %env.UID%"
        }
    }

    features {
        perfmon {
        }
        dockerSupport {
            enabled = false
            loginToRegistry = on {
                dockerRegistryId = "PROJECT_EXT_6"
            }
        }
    }
}))

